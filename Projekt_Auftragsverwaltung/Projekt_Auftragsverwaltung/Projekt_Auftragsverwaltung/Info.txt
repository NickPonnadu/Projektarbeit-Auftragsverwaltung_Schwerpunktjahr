NuGet-Pakete:
Zunächst müssen wir das NuGet-Paket für den Anbieter der Datenbank installieren, auf die wir zugreifen möchten. In diesem Fall möchten wir auf die MS SQL Server-Datenbank zugreifen, also müssen wir das NuGet-Paket ""Microsoft.EntityFrameworkCore.SqlServer"" installieren.

Die ""Entity Framework Core Tools"" helfen zur Entwurfszeit bei Entwicklungsaufgaben. Diese werden hauptsächlich verwendet, um Migrationen zu verwalten und ein Gerüst für DbContext und Entitätstypen durch Reverse Engineering eines Datenbankschemas zu erstellen.

Wenn wir EF Core-Befehle über die Befehlszeilenschnittstelle (CLI) von .NET Core ausführen möchten, installieren wir zunächst das NuGet-Paket ""Microsoft.EntityFrameworkCore.Tools.DotNet"" dieses ist aber veraltet und wird nicht mehr gepflegt.



Code First: 
Um Aus der OOP eine Relationale Datenbank zu machen benötigen wir das EF.
Dazu erstellen wir eine Context Klasse welche von DbContext erbt.
Dort können wir Properties mit dem Datentyp : DbSet<T> erstellen welche unsere Tabellen darstellen.



Der ConnectionString:
Weil wir mit lokalen SQL Servern arbeiten, 
braucht es verschieden ConnectionStrings um eine Verbindung auf dem jeweiligen Rechner herstellen zu können.

Um viel Code, aufwand und Einfachheit wird der ConnectionString in der App.cofig Datei hinterlegt und auf diesen wird dann im Code mit der "ConfigurationManager-Klasse" darauf zugegriffen.