// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_Auftragsverwaltung;

#nullable disable

namespace ProjektAuftragsverwaltung.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230226134454_MyNewMigration")]
    partial class MyNewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("ZipCode");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            HouseNumber = "1",
                            Street = "Teststraße 1",
                            ZipCode = 12345
                        },
                        new
                        {
                            AddressId = 2,
                            HouseNumber = "2",
                            Street = "Teststraße 2",
                            ZipCode = 12345
                        },
                        new
                        {
                            AddressId = 3,
                            HouseNumber = "3",
                            Street = "Teststraße 3",
                            ZipCode = 12345
                        },
                        new
                        {
                            AddressId = 4,
                            HouseNumber = "4",
                            Street = "Teststraße 4",
                            ZipCode = 12345
                        },
                        new
                        {
                            AddressId = 5,
                            HouseNumber = "5",
                            Street = "Teststraße 5",
                            ZipCode = 12345
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.AddressLocation", b =>
                {
                    b.Property<int>("ZipCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZipCode"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZipCode");

                    b.ToTable("AddressLocations");

                    b.HasData(
                        new
                        {
                            ZipCode = 12345,
                            Location = "Testort 1"
                        },
                        new
                        {
                            ZipCode = 123456,
                            Location = "Testort 2"
                        },
                        new
                        {
                            ZipCode = 123457,
                            Location = "Testort 3"
                        },
                        new
                        {
                            ZipCode = 123458,
                            Location = "Testort 4"
                        },
                        new
                        {
                            ZipCode = 123459,
                            Location = "Testort 5"
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<int>("ArticleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ArticleId");

                    b.HasIndex("ArticleGroupId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            ArticleGroupId = 1,
                            ArticleName = "Artikel 1",
                            Price = 10.0m
                        },
                        new
                        {
                            ArticleId = 2,
                            ArticleGroupId = 1,
                            ArticleName = "Artikel 2",
                            Price = 20.0m
                        },
                        new
                        {
                            ArticleId = 3,
                            ArticleGroupId = 2,
                            ArticleName = "Artikel 3",
                            Price = 30.0m
                        },
                        new
                        {
                            ArticleId = 4,
                            ArticleGroupId = 2,
                            ArticleName = "Artikel 4",
                            Price = 40.0m
                        },
                        new
                        {
                            ArticleId = 5,
                            ArticleGroupId = 3,
                            ArticleName = "Artikel 5",
                            Price = 50.0m
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.ArticleGroup", b =>
                {
                    b.Property<int>("ArticleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleGroupId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleGroupId");

                    b.ToTable("ArticleGroups");

                    b.HasData(
                        new
                        {
                            ArticleGroupId = 1,
                            Name = "Gruppe 1"
                        },
                        new
                        {
                            ArticleGroupId = 2,
                            Name = "Gruppe 2"
                        },
                        new
                        {
                            ArticleGroupId = 3,
                            Name = "Gruppe 3"
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.ArticlePosition", b =>
                {
                    b.Property<int>("ArticlePositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticlePositionId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPositionId")
                        .HasColumnType("int");

                    b.HasKey("ArticlePositionId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("OrderPositionId");

                    b.ToTable("ArticlePositions");

                    b.HasData(
                        new
                        {
                            ArticlePositionId = 1,
                            ArticleId = 1,
                            OrderPositionId = 1
                        },
                        new
                        {
                            ArticlePositionId = 2,
                            ArticleId = 2,
                            OrderPositionId = 2
                        },
                        new
                        {
                            ArticlePositionId = 3,
                            ArticleId = 3,
                            OrderPositionId = 3
                        },
                        new
                        {
                            ArticlePositionId = 4,
                            ArticleId = 4,
                            OrderPositionId = 4
                        },
                        new
                        {
                            ArticlePositionId = 5,
                            ArticleId = 5,
                            OrderPositionId = 5
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            AddressId = 1,
                            EMail = "test1@test.com",
                            Name = "Test Kunde 1",
                            Password = "pass1",
                            PhoneNumber = "0123456789",
                            Website = "Website1"
                        },
                        new
                        {
                            CustomerId = 2,
                            AddressId = 2,
                            EMail = "test2@test.com",
                            Name = "Test Kunde 2",
                            Password = "pass2",
                            PhoneNumber = "9876543210",
                            Website = "Website2"
                        },
                        new
                        {
                            CustomerId = 3,
                            AddressId = 3,
                            EMail = "test3@test.com",
                            Name = "Test Kunde 3",
                            Password = "pass3",
                            PhoneNumber = "1234567890",
                            Website = "Website3"
                        },
                        new
                        {
                            CustomerId = 4,
                            AddressId = 4,
                            EMail = "test4@test.com",
                            Name = "Test Kunde 4",
                            Password = "pass4",
                            PhoneNumber = "0987654321",
                            Website = "Website4"
                        },
                        new
                        {
                            CustomerId = 5,
                            AddressId = 5,
                            EMail = "test5@test.com",
                            Name = "Test Kunde 5",
                            Password = "pass5",
                            PhoneNumber = "1023456789",
                            Website = "Website5"
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            Date = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            Date = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 4,
                            Date = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 5,
                            Date = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.OrderPosition", b =>
                {
                    b.Property<int>("OrderPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderPositionId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("OrderPositionId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPositions");

                    b.HasData(
                        new
                        {
                            OrderPositionId = 1,
                            OrderId = 1,
                            amount = 5
                        },
                        new
                        {
                            OrderPositionId = 2,
                            OrderId = 2,
                            amount = 10
                        },
                        new
                        {
                            OrderPositionId = 3,
                            OrderId = 3,
                            amount = 3
                        },
                        new
                        {
                            OrderPositionId = 4,
                            OrderId = 4,
                            amount = 8
                        },
                        new
                        {
                            OrderPositionId = 5,
                            OrderId = 5,
                            amount = 15
                        });
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Address", b =>
                {
                    b.HasOne("Projekt_Auftragsverwaltung.Tables.Customer", "Customer")
                        .WithOne("Address")
                        .HasForeignKey("Projekt_Auftragsverwaltung.Tables.Address", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_Auftragsverwaltung.Tables.AddressLocation", "AddressLocation")
                        .WithMany("Addresses")
                        .HasForeignKey("ZipCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressLocation");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Article", b =>
                {
                    b.HasOne("Projekt_Auftragsverwaltung.Tables.ArticleGroup", "ArticleGroup")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleGroup");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.ArticlePosition", b =>
                {
                    b.HasOne("Projekt_Auftragsverwaltung.Tables.Article", "Article")
                        .WithMany("OrderPositions")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_Auftragsverwaltung.Tables.OrderPosition", "OrderPosition")
                        .WithMany("Articles")
                        .HasForeignKey("OrderPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("OrderPosition");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Order", b =>
                {
                    b.HasOne("Projekt_Auftragsverwaltung.Tables.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.OrderPosition", b =>
                {
                    b.HasOne("Projekt_Auftragsverwaltung.Tables.Order", "Order")
                        .WithMany("OrderPositions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.AddressLocation", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Article", b =>
                {
                    b.Navigation("OrderPositions");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.ArticleGroup", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Customer", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.Order", b =>
                {
                    b.Navigation("OrderPositions");
                });

            modelBuilder.Entity("Projekt_Auftragsverwaltung.Tables.OrderPosition", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
